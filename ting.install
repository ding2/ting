<?php

/**
 * @file
 * Install, update and uninstall functions for the ting module.
 */

/**
 * Implements hook_schema().
 */
function ting_schema() {
  $schema = array();
  
  $schema['ting_object'] = array(
    'description' => 'Local proxy table for ting objects.',
    'fields' => array(
      'tid' => array(
        'description' => 'The primary local identifier for a ting object.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'vid' => array(
        'description' => 'The current {ting_object_revision}.vid version identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'ding_entity_id' => array(
        'description' => 'The ting object id.',
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'indexes' => array(
      'ding_entity_id' => array('ding_entity_id'),
    ),
    'unique keys' => array(
      'vid' => array('vid'),
    ),
    'foreign keys' => array(
      'ting_object_revision' => array(
        'table' => 'ting_object_revision',
        'columns' => array('vid' => 'vid'),
      ),
    ),
    'primary key' => array('tid'),
  );

  $schema['ting_object_revision'] = array(
    'description' => 'Stores information about each saved version of a {ting_object}.',
    'fields' => array(
      'tid' => array(
        'description' => 'The {ting_object} this version belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'vid' => array(
        'description' => 'The primary identifier for this version.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'timestamp' => array(
        'description' => 'A Unix timestamp indicating when this version was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'tid' => array('tid'),
    ),
    'primary key' => array('vid'),
    'foreign keys' => array(
      'versioned_ting_object' => array(
        'table' => 'ting_object',
        'columns' => array('tid' => 'tid'),
      ),
    ),
  );

  return $schema;
}

/**
 * Implements hook_ding_entity_fields().
 */
function ting_ding_entity_fields() {
  return array(
    'ting_title' => array(
      'field' => array(
        'locked' => TRUE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'label' => t('Ting object title'),
      ),
    ),
    'ting_type' => array(
      'field' => array(
        'locked' => TRUE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'label' => t('Ting object type'),
      ),
    ),
    'ting_series' => array(
      'field' => array(
        'locked' => TRUE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'label' => t('Ting object series'),
      ),
    ),
    'ting_abstract' => array(
      'field' => array(
        'locked' => TRUE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'label' => t('Ting object abstract'),
      ),
    ),
    'ting_author' => array(
      'field' => array(
        'locked' => TRUE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'label' => t('Ting object author'),
      ),
    ),
    'ting_subjects' => array(
      'field' => array(
        'locked' => TRUE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'label' => t('Ting object subjects'),
      ),
    ),

    'ting_primary_object' => array(
      'field' => array(
        'locked' => TRUE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'ding_entity_collection',
        'label' => t('Ting collection primary object'),
      ),
    ),
    'ting_entities' => array(
      'field' => array(
        'locked' => TRUE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'ding_entity_collection',
        'label' => t('Ting collection objects'),
      ),
    ),
    'ting_collection_types' => array(
      'field' => array(
        'locked' => TRUE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'ding_entity_collection',
        'label' => t('Ting collection object types'),
      ),
    ),
  );
}

/**
 * Convert blackhole field storage to virtual field.
 */
function ting_update_7000() {
  return db_update('field_config')
    ->fields(array(
      'storage_type' => 'virtual_field',
      'storage_module' => 'virtual_field',
    ))
    ->condition('module', 'ting')
    ->execute();
}
